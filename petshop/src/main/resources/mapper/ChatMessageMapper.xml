<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.petshop.mapper.ChatMessageMapper">


    <!-- 📁 src/main/resources/mapper/ChatMessageMapper.xml -->
    <select id="selectChatSummaries" resultType="ChatSummaryDTO">
        WITH FilteredMessages AS (
        SELECT
        CASE
        WHEN sender_id = #{userId} THEN receiver_id
        ELSE sender_id
        END AS buyerId,
        receiver_id,
        is_read,
        content,
        created_at
        FROM chat_message
        WHERE
        (sender_id = #{userId} OR receiver_id = #{userId})
        AND sender_id &lt;&gt; receiver_id  <!-- ✅ 使用 XML 转义符号 -->
        ),
        RankedMessages AS (
        SELECT
        buyerId,
        content,
        created_at,
        ROW_NUMBER() OVER (PARTITION BY buyerId ORDER BY created_at DESC) AS rn
        FROM FilteredMessages
        )
        SELECT
        fm.buyerId,
        u.user_name AS buyerName,
        COUNT(CASE WHEN fm.receiver_id = #{userId} AND fm.is_read = 0 THEN 1 END) AS unreadCount,
        rm.content AS lastMessage,
        MAX(fm.created_at) AS lastMessageTime
        FROM FilteredMessages fm
        LEFT JOIN RankedMessages rm ON fm.buyerId = rm.buyerId AND rm.rn = 1
        LEFT JOIN user u ON fm.buyerId = u.id
        GROUP BY fm.buyerId, u.user_name, rm.content
        ORDER BY lastMessageTime DESC;
    </select>

</mapper>